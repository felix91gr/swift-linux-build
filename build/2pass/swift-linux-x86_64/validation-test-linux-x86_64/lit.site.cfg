# swift/validation-test/lit.site.cfg.in ---------------------------*- python -*-
#
# This source file is part of the Swift.org open source project
#
# Copyright (c) 2014 - 2017 Apple Inc. and the Swift project authors
# Licensed under Apache License v2.0 with Runtime Library Exception
#
# See https://swift.org/LICENSE.txt for license information
# See https://swift.org/CONTRIBUTORS.txt for the list of Swift project authors
#
# -----------------------------------------------------------------------------

import sys
import platform

config.llvm_src_root = "/home/felix/Desktop/NativeSetup/swift-linuxSetup/native_install/llvm"
config.llvm_obj_root = "/home/felix/Desktop/NativeSetup/swift-linuxSetup/native_install/build/2pass/llvm-linux-x86_64"
config.llvm_tools_dir = "/home/felix/Desktop/NativeSetup/swift-linuxSetup/native_install/build/2pass/llvm-linux-x86_64/./bin"
config.llvm_libs_dir = "/home/felix/Desktop/NativeSetup/swift-linuxSetup/native_install/build/2pass/llvm-linux-x86_64/./lib"
config.llvm_code_generators = "X86;ARM;AArch64;PowerPC;SystemZ".split(";")
config.lit_tools_dir = ""
config.swift_src_root = "/home/felix/Desktop/NativeSetup/swift-linuxSetup/native_install/swift"
config.swift_obj_root = "/home/felix/Desktop/NativeSetup/swift-linuxSetup/native_install/build/2pass/swift-linux-x86_64"
config.target_triple = "x86_64-unknown-linux-gnu"
config.variant_triple = "x86_64-unknown-linux-gnu"
config.variant_suffix = "-linux-x86_64"
config.variant_sdk = "/"
config.swift_test_results_dir = \
    lit_config.params.get("swift_test_results_dir", "/home/felix/Desktop/NativeSetup/swift-linuxSetup/native_install/build/2pass/swift-linux-x86_64/./swift-test-results/x86_64-unknown-linux-gnu")
config.darwin_xcrun_toolchain = "default"
config.android_ndk_path = ""
config.android_ndk_gcc_version = ""

config.coverage_mode = "FALSE"

if "FALSE" == "TRUE":
    config.available_features.add("asan")
else:
    config.available_features.add('no_asan')

if "".lower() in ["full", "thin"]:
   config.available_features.add("lto")
else:
   config.available_features.add("no_lto")

if "TRUE" == "TRUE":
    config.available_features.add('asserts')
else:
    config.available_features.add('no_asserts')

# If tools have debug info, set the tools-debuginfo flag.
if "Release" in ["Debug", "RelWithDebInfo"]:
    config.available_features.add('tools-debuginfo')

# If tools are release-mode, set the tools-release flag.
if "Release" in ["Release", "RelWithDebInfo"]:
    config.available_features.add('tools-release')

if "TRUE" == "TRUE":
    config.available_features.add('swift_stdlib_asserts')
else:
    config.available_features.add('swift_stdlib_no_asserts')

if "TRUE" == "TRUE":
    config.available_features.add("optimized_stdlib")

if "FALSE" == "TRUE":
    config.available_features.add("resilient_stdlib")

if "Ninja" == "Xcode":
    xcode_bin_dir = os.path.join(config.llvm_obj_root, "Release",
                                 'bin')
    lit_config.note('Adding to path: ' + xcode_bin_dir)
    config.environment['PATH'] = \
      os.path.pathsep.join((xcode_bin_dir, config.environment['PATH']))

# Let the main config do the real work.
config.test_exec_root = os.path.dirname(os.path.realpath(__file__))
lit_config.load_config(config, "/home/felix/Desktop/NativeSetup/swift-linuxSetup/native_install/swift/validation-test/lit.cfg")

