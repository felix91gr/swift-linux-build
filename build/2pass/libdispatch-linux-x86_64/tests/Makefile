# Makefile.in generated by automake 1.15 from Makefile.am.
# tests/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#
#
#


VPATH = /home/felix/Desktop/NativeSetup/swift-linuxSetup/native_install/swift-corelibs-libdispatch/tests
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/libdispatch
pkgincludedir = $(includedir)/libdispatch
pkglibdir = $(libdir)/libdispatch
pkglibexecdir = $(libexecdir)/libdispatch
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
target_triplet = x86_64-pc-linux-gnu
check_PROGRAMS = bsdtestharness$(EXEEXT) bsdtestsummarize$(EXEEXT) \
	$(am__EXEEXT_5)
TESTS = dispatch_apply$(EXEEXT) dispatch_api$(EXEEXT) \
	dispatch_c99$(EXEEXT) dispatch_debug$(EXEEXT) \
	dispatch_queue_finalizer$(EXEEXT) dispatch_group$(EXEEXT) \
	dispatch_overcommit$(EXEEXT) dispatch_plusplus$(EXEEXT) \
	dispatch_context_for_key$(EXEEXT) dispatch_after$(EXEEXT) \
	dispatch_timer$(EXEEXT) dispatch_timer_short$(EXEEXT) \
	dispatch_timer_timeout$(EXEEXT) dispatch_sema$(EXEEXT) \
	dispatch_timer_bit31$(EXEEXT) dispatch_timer_bit63$(EXEEXT) \
	dispatch_timer_set_time$(EXEEXT) dispatch_starfish$(EXEEXT) \
	dispatch_data$(EXEEXT) dispatch_io_net$(EXEEXT) \
	dispatch_select$(EXEEXT) $(am__EXEEXT_2) $(am__EXEEXT_3) \
	$(am__EXEEXT_4)
am__append_1 = -I$(top_srcdir)/src/BlocksRuntime
am__append_2 = -I$(top_srcdir)/src/BlocksRuntime
#am__append_3 = \
#	dispatch_cf_main			\
#	dispatch_transform			\
#	dispatch_sync_on_main		\
#	cffd

#am__append_4 = -DHAVE_COREFOUNDATION
#am__append_5 = \
#	dispatch_sync_gc			\
#	dispatch_apply_gc			\
#	nsoperation					\
#	bench

#am__append_6 = -DHAVE_FOUNDATION
subdir = tests
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/atomic.m4 \
	$(top_srcdir)/m4/blocks.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config/config_ac.h
CONFIG_CLEAN_FILES = dispatch leaks-wrapper
CONFIG_CLEAN_VPATH_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
libbsdtests_la_LIBADD =
am_libbsdtests_la_OBJECTS = bsdtests.lo dispatch_test.lo
libbsdtests_la_OBJECTS = $(am_libbsdtests_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
libbsdtests_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(libbsdtests_la_LDFLAGS) $(LDFLAGS) -o \
	$@
am__EXEEXT_1 = dispatch_priority$(EXEEXT) dispatch_priority2$(EXEEXT) \
	dispatch_concur$(EXEEXT) dispatch_read$(EXEEXT) \
	dispatch_read2$(EXEEXT) dispatch_suspend_timer$(EXEEXT) \
	dispatch_pingpong$(EXEEXT) dispatch_drift$(EXEEXT) \
	dispatch_readsync$(EXEEXT) dispatch_cascade$(EXEEXT) \
	dispatch_io$(EXEEXT)
#am__EXEEXT_2 = $(am__EXEEXT_1)
#am__EXEEXT_3 = dispatch_cf_main$(EXEEXT) \
#	dispatch_transform$(EXEEXT) \
#	dispatch_sync_on_main$(EXEEXT) \
#	cffd$(EXEEXT)
#am__EXEEXT_4 = dispatch_sync_gc$(EXEEXT) \
#	dispatch_apply_gc$(EXEEXT) \
#	nsoperation$(EXEEXT) bench$(EXEEXT)
am__EXEEXT_5 = dispatch_apply$(EXEEXT) dispatch_api$(EXEEXT) \
	dispatch_c99$(EXEEXT) dispatch_debug$(EXEEXT) \
	dispatch_queue_finalizer$(EXEEXT) dispatch_group$(EXEEXT) \
	dispatch_overcommit$(EXEEXT) dispatch_plusplus$(EXEEXT) \
	dispatch_context_for_key$(EXEEXT) dispatch_after$(EXEEXT) \
	dispatch_timer$(EXEEXT) dispatch_timer_short$(EXEEXT) \
	dispatch_timer_timeout$(EXEEXT) dispatch_sema$(EXEEXT) \
	dispatch_timer_bit31$(EXEEXT) dispatch_timer_bit63$(EXEEXT) \
	dispatch_timer_set_time$(EXEEXT) dispatch_starfish$(EXEEXT) \
	dispatch_data$(EXEEXT) dispatch_io_net$(EXEEXT) \
	dispatch_select$(EXEEXT) $(am__EXEEXT_2) $(am__EXEEXT_3) \
	$(am__EXEEXT_4)
am__bench_SOURCES_DIST = Foundation/bench.mm func.c
am__dirstamp = $(am__leading_dot)dirstamp
#am_bench_OBJECTS = Foundation/bench.$(OBJEXT) \
#	func.$(OBJEXT)
bench_OBJECTS = $(am_bench_OBJECTS)
bench_LDADD = $(LDADD)
am__DEPENDENCIES_1 =
bench_DEPENDENCIES = libbsdtests.la $(top_builddir)/src/libdispatch.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
bench_LINK = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(OBJCXXLD) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) \
	$(bench_LDFLAGS) $(LDFLAGS) -o $@
bsdtestharness_SOURCES = bsdtestharness.c
bsdtestharness_OBJECTS = bsdtestharness.$(OBJEXT)
bsdtestharness_LDADD = $(LDADD)
bsdtestharness_DEPENDENCIES = libbsdtests.la \
	$(top_builddir)/src/libdispatch.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
bsdtestsummarize_SOURCES = bsdtestsummarize.c
bsdtestsummarize_OBJECTS = bsdtestsummarize.$(OBJEXT)
bsdtestsummarize_DEPENDENCIES = $(am__DEPENDENCIES_1)
cffd_SOURCES = cffd.c
cffd_OBJECTS = cffd.$(OBJEXT)
cffd_LDADD = $(LDADD)
cffd_DEPENDENCIES = libbsdtests.la $(top_builddir)/src/libdispatch.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
cffd_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(cffd_LDFLAGS) $(LDFLAGS) -o $@
dispatch_after_SOURCES = dispatch_after.c
dispatch_after_OBJECTS = dispatch_after.$(OBJEXT)
dispatch_after_LDADD = $(LDADD)
dispatch_after_DEPENDENCIES = libbsdtests.la \
	$(top_builddir)/src/libdispatch.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
dispatch_api_SOURCES = dispatch_api.c
dispatch_api_OBJECTS = dispatch_api.$(OBJEXT)
dispatch_api_LDADD = $(LDADD)
dispatch_api_DEPENDENCIES = libbsdtests.la \
	$(top_builddir)/src/libdispatch.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
dispatch_apply_SOURCES = dispatch_apply.c
dispatch_apply_OBJECTS = dispatch_apply.$(OBJEXT)
dispatch_apply_LDADD = $(LDADD)
dispatch_apply_DEPENDENCIES = libbsdtests.la \
	$(top_builddir)/src/libdispatch.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am__dispatch_apply_gc_SOURCES_DIST = Foundation/dispatch_apply_gc.m
#am_dispatch_apply_gc_OBJECTS =  \
#	Foundation/dispatch_apply_gc.$(OBJEXT)
dispatch_apply_gc_OBJECTS = $(am_dispatch_apply_gc_OBJECTS)
dispatch_apply_gc_LDADD = $(LDADD)
dispatch_apply_gc_DEPENDENCIES = libbsdtests.la \
	$(top_builddir)/src/libdispatch.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
dispatch_apply_gc_LINK = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(OBJCLD) $(AM_OBJCFLAGS) \
	$(OBJCFLAGS) $(dispatch_apply_gc_LDFLAGS) $(LDFLAGS) -o $@
dispatch_c99_SOURCES = dispatch_c99.c
dispatch_c99_OBJECTS = dispatch_c99-dispatch_c99.$(OBJEXT)
dispatch_c99_LDADD = $(LDADD)
dispatch_c99_DEPENDENCIES = libbsdtests.la \
	$(top_builddir)/src/libdispatch.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
dispatch_c99_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(dispatch_c99_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
dispatch_cascade_SOURCES = dispatch_cascade.c
dispatch_cascade_OBJECTS = dispatch_cascade.$(OBJEXT)
dispatch_cascade_LDADD = $(LDADD)
dispatch_cascade_DEPENDENCIES = libbsdtests.la \
	$(top_builddir)/src/libdispatch.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
dispatch_cf_main_SOURCES = dispatch_cf_main.c
dispatch_cf_main_OBJECTS = dispatch_cf_main.$(OBJEXT)
dispatch_cf_main_LDADD = $(LDADD)
dispatch_cf_main_DEPENDENCIES = libbsdtests.la \
	$(top_builddir)/src/libdispatch.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
dispatch_cf_main_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(dispatch_cf_main_LDFLAGS) $(LDFLAGS) \
	-o $@
dispatch_concur_SOURCES = dispatch_concur.c
dispatch_concur_OBJECTS = dispatch_concur.$(OBJEXT)
dispatch_concur_LDADD = $(LDADD)
dispatch_concur_DEPENDENCIES = libbsdtests.la \
	$(top_builddir)/src/libdispatch.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
dispatch_context_for_key_SOURCES = dispatch_context_for_key.c
dispatch_context_for_key_OBJECTS = dispatch_context_for_key.$(OBJEXT)
dispatch_context_for_key_LDADD = $(LDADD)
dispatch_context_for_key_DEPENDENCIES = libbsdtests.la \
	$(top_builddir)/src/libdispatch.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
dispatch_data_SOURCES = dispatch_data.c
dispatch_data_OBJECTS = dispatch_data.$(OBJEXT)
dispatch_data_LDADD = $(LDADD)
dispatch_data_DEPENDENCIES = libbsdtests.la \
	$(top_builddir)/src/libdispatch.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
dispatch_debug_SOURCES = dispatch_debug.c
dispatch_debug_OBJECTS = dispatch_debug.$(OBJEXT)
dispatch_debug_LDADD = $(LDADD)
dispatch_debug_DEPENDENCIES = libbsdtests.la \
	$(top_builddir)/src/libdispatch.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
dispatch_drift_SOURCES = dispatch_drift.c
dispatch_drift_OBJECTS = dispatch_drift.$(OBJEXT)
dispatch_drift_LDADD = $(LDADD)
dispatch_drift_DEPENDENCIES = libbsdtests.la \
	$(top_builddir)/src/libdispatch.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
dispatch_group_SOURCES = dispatch_group.c
dispatch_group_OBJECTS = dispatch_group.$(OBJEXT)
am__DEPENDENCIES_2 = libbsdtests.la $(top_builddir)/src/libdispatch.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
dispatch_group_DEPENDENCIES = $(am__DEPENDENCIES_2)
dispatch_io_SOURCES = dispatch_io.c
dispatch_io_OBJECTS = dispatch_io.$(OBJEXT)
dispatch_io_LDADD = $(LDADD)
dispatch_io_DEPENDENCIES = libbsdtests.la \
	$(top_builddir)/src/libdispatch.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
dispatch_io_net_SOURCES = dispatch_io_net.c
dispatch_io_net_OBJECTS = dispatch_io_net.$(OBJEXT)
dispatch_io_net_LDADD = $(LDADD)
dispatch_io_net_DEPENDENCIES = libbsdtests.la \
	$(top_builddir)/src/libdispatch.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
dispatch_overcommit_SOURCES = dispatch_overcommit.c
dispatch_overcommit_OBJECTS = dispatch_overcommit.$(OBJEXT)
dispatch_overcommit_LDADD = $(LDADD)
dispatch_overcommit_DEPENDENCIES = libbsdtests.la \
	$(top_builddir)/src/libdispatch.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
dispatch_pingpong_SOURCES = dispatch_pingpong.c
dispatch_pingpong_OBJECTS = dispatch_pingpong.$(OBJEXT)
dispatch_pingpong_LDADD = $(LDADD)
dispatch_pingpong_DEPENDENCIES = libbsdtests.la \
	$(top_builddir)/src/libdispatch.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_dispatch_plusplus_OBJECTS = dispatch_plusplus.$(OBJEXT)
dispatch_plusplus_OBJECTS = $(am_dispatch_plusplus_OBJECTS)
dispatch_plusplus_LDADD = $(LDADD)
dispatch_plusplus_DEPENDENCIES = libbsdtests.la \
	$(top_builddir)/src/libdispatch.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
dispatch_priority_SOURCES = dispatch_priority.c
dispatch_priority_OBJECTS = dispatch_priority.$(OBJEXT)
dispatch_priority_LDADD = $(LDADD)
dispatch_priority_DEPENDENCIES = libbsdtests.la \
	$(top_builddir)/src/libdispatch.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_dispatch_priority2_OBJECTS =  \
	dispatch_priority2-dispatch_priority.$(OBJEXT)
dispatch_priority2_OBJECTS = $(am_dispatch_priority2_OBJECTS)
dispatch_priority2_LDADD = $(LDADD)
dispatch_priority2_DEPENDENCIES = libbsdtests.la \
	$(top_builddir)/src/libdispatch.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
dispatch_queue_finalizer_SOURCES = dispatch_queue_finalizer.c
dispatch_queue_finalizer_OBJECTS = dispatch_queue_finalizer.$(OBJEXT)
dispatch_queue_finalizer_LDADD = $(LDADD)
dispatch_queue_finalizer_DEPENDENCIES = libbsdtests.la \
	$(top_builddir)/src/libdispatch.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
dispatch_read_SOURCES = dispatch_read.c
dispatch_read_OBJECTS = dispatch_read.$(OBJEXT)
dispatch_read_LDADD = $(LDADD)
dispatch_read_DEPENDENCIES = libbsdtests.la \
	$(top_builddir)/src/libdispatch.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
dispatch_read2_SOURCES = dispatch_read2.c
dispatch_read2_OBJECTS = dispatch_read2.$(OBJEXT)
dispatch_read2_LDADD = $(LDADD)
dispatch_read2_DEPENDENCIES = libbsdtests.la \
	$(top_builddir)/src/libdispatch.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
dispatch_readsync_SOURCES = dispatch_readsync.c
dispatch_readsync_OBJECTS = dispatch_readsync.$(OBJEXT)
dispatch_readsync_LDADD = $(LDADD)
dispatch_readsync_DEPENDENCIES = libbsdtests.la \
	$(top_builddir)/src/libdispatch.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
dispatch_select_SOURCES = dispatch_select.c
dispatch_select_OBJECTS = dispatch_select.$(OBJEXT)
dispatch_select_LDADD = $(LDADD)
dispatch_select_DEPENDENCIES = libbsdtests.la \
	$(top_builddir)/src/libdispatch.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
dispatch_sema_SOURCES = dispatch_sema.c
dispatch_sema_OBJECTS = dispatch_sema.$(OBJEXT)
dispatch_sema_LDADD = $(LDADD)
dispatch_sema_DEPENDENCIES = libbsdtests.la \
	$(top_builddir)/src/libdispatch.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
dispatch_starfish_SOURCES = dispatch_starfish.c
dispatch_starfish_OBJECTS = dispatch_starfish.$(OBJEXT)
dispatch_starfish_LDADD = $(LDADD)
dispatch_starfish_DEPENDENCIES = libbsdtests.la \
	$(top_builddir)/src/libdispatch.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
dispatch_suspend_timer_SOURCES = dispatch_suspend_timer.c
dispatch_suspend_timer_OBJECTS = dispatch_suspend_timer.$(OBJEXT)
dispatch_suspend_timer_LDADD = $(LDADD)
dispatch_suspend_timer_DEPENDENCIES = libbsdtests.la \
	$(top_builddir)/src/libdispatch.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am__dispatch_sync_gc_SOURCES_DIST = Foundation/dispatch_sync_gc.m
#am_dispatch_sync_gc_OBJECTS =  \
#	Foundation/dispatch_sync_gc.$(OBJEXT)
dispatch_sync_gc_OBJECTS = $(am_dispatch_sync_gc_OBJECTS)
dispatch_sync_gc_LDADD = $(LDADD)
dispatch_sync_gc_DEPENDENCIES = libbsdtests.la \
	$(top_builddir)/src/libdispatch.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
dispatch_sync_gc_LINK = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(OBJCLD) $(AM_OBJCFLAGS) \
	$(OBJCFLAGS) $(dispatch_sync_gc_LDFLAGS) $(LDFLAGS) -o $@
dispatch_sync_on_main_SOURCES = dispatch_sync_on_main.c
dispatch_sync_on_main_OBJECTS = dispatch_sync_on_main.$(OBJEXT)
dispatch_sync_on_main_LDADD = $(LDADD)
dispatch_sync_on_main_DEPENDENCIES = libbsdtests.la \
	$(top_builddir)/src/libdispatch.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
dispatch_sync_on_main_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(dispatch_sync_on_main_LDFLAGS) \
	$(LDFLAGS) -o $@
dispatch_timer_SOURCES = dispatch_timer.c
dispatch_timer_OBJECTS = dispatch_timer.$(OBJEXT)
dispatch_timer_LDADD = $(LDADD)
dispatch_timer_DEPENDENCIES = libbsdtests.la \
	$(top_builddir)/src/libdispatch.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
dispatch_timer_bit31_SOURCES = dispatch_timer_bit31.c
dispatch_timer_bit31_OBJECTS = dispatch_timer_bit31.$(OBJEXT)
dispatch_timer_bit31_LDADD = $(LDADD)
dispatch_timer_bit31_DEPENDENCIES = libbsdtests.la \
	$(top_builddir)/src/libdispatch.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
dispatch_timer_bit63_SOURCES = dispatch_timer_bit63.c
dispatch_timer_bit63_OBJECTS = dispatch_timer_bit63.$(OBJEXT)
dispatch_timer_bit63_LDADD = $(LDADD)
dispatch_timer_bit63_DEPENDENCIES = libbsdtests.la \
	$(top_builddir)/src/libdispatch.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
dispatch_timer_set_time_SOURCES = dispatch_timer_set_time.c
dispatch_timer_set_time_OBJECTS = dispatch_timer_set_time.$(OBJEXT)
dispatch_timer_set_time_LDADD = $(LDADD)
dispatch_timer_set_time_DEPENDENCIES = libbsdtests.la \
	$(top_builddir)/src/libdispatch.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
dispatch_timer_short_SOURCES = dispatch_timer_short.c
dispatch_timer_short_OBJECTS = dispatch_timer_short.$(OBJEXT)
dispatch_timer_short_DEPENDENCIES = $(am__DEPENDENCIES_2)
dispatch_timer_timeout_SOURCES = dispatch_timer_timeout.c
dispatch_timer_timeout_OBJECTS = dispatch_timer_timeout.$(OBJEXT)
dispatch_timer_timeout_LDADD = $(LDADD)
dispatch_timer_timeout_DEPENDENCIES = libbsdtests.la \
	$(top_builddir)/src/libdispatch.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
dispatch_transform_SOURCES = dispatch_transform.c
dispatch_transform_OBJECTS = dispatch_transform.$(OBJEXT)
dispatch_transform_LDADD = $(LDADD)
dispatch_transform_DEPENDENCIES = libbsdtests.la \
	$(top_builddir)/src/libdispatch.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
dispatch_transform_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(dispatch_transform_LDFLAGS) \
	$(LDFLAGS) -o $@
am__nsoperation_SOURCES_DIST = Foundation/nsoperation.m
#am_nsoperation_OBJECTS =  \
#	Foundation/nsoperation.$(OBJEXT)
nsoperation_OBJECTS = $(am_nsoperation_OBJECTS)
nsoperation_LDADD = $(LDADD)
nsoperation_DEPENDENCIES = libbsdtests.la \
	$(top_builddir)/src/libdispatch.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
nsoperation_LINK = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(OBJCLD) $(AM_OBJCFLAGS) \
	$(OBJCFLAGS) $(nsoperation_LDFLAGS) $(LDFLAGS) -o $@
SCRIPTS = $(noinst_SCRIPTS)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)/config
depcomp =
am__depfiles_maybe =
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
OBJCCOMPILE = $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCFLAGS) $(OBJCFLAGS)
LTOBJCCOMPILE = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_OBJCFLAGS) $(OBJCFLAGS)
AM_V_OBJC = $(am__v_OBJC_$(V))
am__v_OBJC_ = $(am__v_OBJC_$(AM_DEFAULT_VERBOSITY))
am__v_OBJC_0 = @echo "  OBJC    " $@;
am__v_OBJC_1 = 
OBJCLD = $(OBJC)
OBJCLINK = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(OBJCLD) $(AM_OBJCFLAGS) $(OBJCFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_OBJCLD = $(am__v_OBJCLD_$(V))
am__v_OBJCLD_ = $(am__v_OBJCLD_$(AM_DEFAULT_VERBOSITY))
am__v_OBJCLD_0 = @echo "  OBJCLD  " $@;
am__v_OBJCLD_1 = 
OBJCXXCOMPILE = $(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS)
LTOBJCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(OBJCXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_OBJCXXFLAGS) $(OBJCXXFLAGS)
AM_V_OBJCXX = $(am__v_OBJCXX_$(V))
am__v_OBJCXX_ = $(am__v_OBJCXX_$(AM_DEFAULT_VERBOSITY))
am__v_OBJCXX_0 = @echo "  OBJCXX  " $@;
am__v_OBJCXX_1 = 
OBJCXXLD = $(OBJCXX)
OBJCXXLINK = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(OBJCXXLD) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_OBJCXXLD = $(am__v_OBJCXXLD_$(V))
am__v_OBJCXXLD_ = $(am__v_OBJCXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_OBJCXXLD_0 = @echo "  OBJCXXLD" $@;
am__v_OBJCXXLD_1 = 
SOURCES = $(libbsdtests_la_SOURCES) $(bench_SOURCES) bsdtestharness.c \
	bsdtestsummarize.c cffd.c dispatch_after.c dispatch_api.c \
	dispatch_apply.c $(dispatch_apply_gc_SOURCES) dispatch_c99.c \
	dispatch_cascade.c dispatch_cf_main.c dispatch_concur.c \
	dispatch_context_for_key.c dispatch_data.c dispatch_debug.c \
	dispatch_drift.c dispatch_group.c dispatch_io.c \
	dispatch_io_net.c dispatch_overcommit.c dispatch_pingpong.c \
	$(dispatch_plusplus_SOURCES) dispatch_priority.c \
	$(dispatch_priority2_SOURCES) dispatch_queue_finalizer.c \
	dispatch_read.c dispatch_read2.c dispatch_readsync.c \
	dispatch_select.c dispatch_sema.c dispatch_starfish.c \
	dispatch_suspend_timer.c $(dispatch_sync_gc_SOURCES) \
	dispatch_sync_on_main.c dispatch_timer.c \
	dispatch_timer_bit31.c dispatch_timer_bit63.c \
	dispatch_timer_set_time.c dispatch_timer_short.c \
	dispatch_timer_timeout.c dispatch_transform.c \
	$(nsoperation_SOURCES)
DIST_SOURCES = $(libbsdtests_la_SOURCES) $(am__bench_SOURCES_DIST) \
	bsdtestharness.c bsdtestsummarize.c cffd.c dispatch_after.c \
	dispatch_api.c dispatch_apply.c \
	$(am__dispatch_apply_gc_SOURCES_DIST) dispatch_c99.c \
	dispatch_cascade.c dispatch_cf_main.c dispatch_concur.c \
	dispatch_context_for_key.c dispatch_data.c dispatch_debug.c \
	dispatch_drift.c dispatch_group.c dispatch_io.c \
	dispatch_io_net.c dispatch_overcommit.c dispatch_pingpong.c \
	$(dispatch_plusplus_SOURCES) dispatch_priority.c \
	$(dispatch_priority2_SOURCES) dispatch_queue_finalizer.c \
	dispatch_read.c dispatch_read2.c dispatch_readsync.c \
	dispatch_select.c dispatch_sema.c dispatch_starfish.c \
	dispatch_suspend_timer.c $(am__dispatch_sync_gc_SOURCES_DIST) \
	dispatch_sync_on_main.c dispatch_timer.c \
	dispatch_timer_bit31.c dispatch_timer_bit63.c \
	dispatch_timer_set_time.c dispatch_timer_short.c \
	dispatch_timer_timeout.c dispatch_transform.c \
	$(am__nsoperation_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS =  .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/config/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/config/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/leaks-wrapper.sh \
	$(top_srcdir)/config/test-driver
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/felix/Desktop/NativeSetup/swift-linuxSetup/native_install/swift-corelibs-libdispatch/config/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AUTOCONF = ${SHELL} /home/felix/Desktop/NativeSetup/swift-linuxSetup/native_install/swift-corelibs-libdispatch/config/missing autoconf
AUTOHEADER = ${SHELL} /home/felix/Desktop/NativeSetup/swift-linuxSetup/native_install/swift-corelibs-libdispatch/config/missing autoheader
AUTOMAKE = ${SHELL} /home/felix/Desktop/NativeSetup/swift-linuxSetup/native_install/swift-corelibs-libdispatch/config/missing automake-1.15
AWK = mawk
BSD_OVERLAY_CFLAGS = -isystem /usr/include/bsd -DLIBBSD_OVERLAY
BSD_OVERLAY_LIBS = -lbsd
CBLOCKS_FLAGS = -fblocks $(am__append_1)
CC = /home/felix/Desktop/NativeSetup/swift-linuxSetup/native_install/build/2pass/llvm-linux-x86_64/bin/clang
CFLAGS = -O2
CPP = /home/felix/Desktop/NativeSetup/swift-linuxSetup/native_install/build/2pass/llvm-linux-x86_64/bin/clang -E
CPPFLAGS = 
CXX = /home/felix/Desktop/NativeSetup/swift-linuxSetup/native_install/build/2pass/llvm-linux-x86_64/bin/clang++
CXXBLOCKS_FLAGS = -fblocks $(am__append_2)
CXXCPP = /home/felix/Desktop/NativeSetup/swift-linuxSetup/native_install/build/2pass/llvm-linux-x86_64/bin/clang++ -E
CXXFLAGS = -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DLLTOOL = false
DSYMUTIL = 
DTRACE = /usr/bin/dtrace
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LEAKS = 
LIBOBJS = 
LIBS = -lpthread 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAINT = #
MAKEINFO = ${SHELL} /home/felix/Desktop/NativeSetup/swift-linuxSetup/native_install/swift-corelibs-libdispatch/config/missing makeinfo
MANIFEST_TOOL = :
MARCH_FLAGS = 
MIG = 
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJC = clang
OBJCFLAGS = -O2
OBJCPP = clang -E
OBJCXX = clang++
OBJCXXFLAGS = -O2
OBJDUMP = objdump
OBJEXT = o
OMIT_LEAF_FP_FLAGS = -momit-leaf-frame-pointer
OS_STRING = linux
OTOOL = 
OTOOL64 = 
PACKAGE = libdispatch
PACKAGE_BUGREPORT = https://bugs.swift.org
PACKAGE_NAME = libdispatch
PACKAGE_STRING = libdispatch 1.3
PACKAGE_TARNAME = libdispatch
PACKAGE_URL = https://github.com/apple/swift-corelibs-libdispatch
PACKAGE_VERSION = 1.3
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
SWIFTC = /home/felix/Desktop/NativeSetup/swift-linuxSetup/native_install/build/2pass/swift-linux-x86_64/bin/swiftc
SWIFTC_FLAGS = 
SWIFT_LIBDIR = /home/felix/Desktop/NativeSetup/swift-linuxSetup/native_install/build/2pass/swift-linux-x86_64/lib/swift/linux/x86_64
VERSION = 1.3
VISIBILITY_FLAGS = -fvisibility=hidden
abs_builddir = /home/felix/Desktop/NativeSetup/swift-linuxSetup/native_install/build/2pass/libdispatch-linux-x86_64/tests
abs_srcdir = /home/felix/Desktop/NativeSetup/swift-linuxSetup/native_install/swift-corelibs-libdispatch/tests
abs_top_builddir = /home/felix/Desktop/NativeSetup/swift-linuxSetup/native_install/build/2pass/libdispatch-linux-x86_64
abs_top_srcdir = /home/felix/Desktop/NativeSetup/swift-linuxSetup/native_install/swift-corelibs-libdispatch
ac_ct_AR = ar
ac_ct_CC = 
ac_ct_CXX = 
ac_ct_DUMPBIN = 
ac_ct_OBJC = clang
ac_ct_OBJCXX = clang++
am__leading_dot = .
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/felix/Desktop/NativeSetup/swift-linuxSetup/native_install/swift-corelibs-libdispatch/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /2p/linux/swift-git/output//usr
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = /home/felix/Desktop/NativeSetup/swift-linuxSetup/native_install/swift-corelibs-libdispatch/tests
subdirs =  libpwq
sysconfdir = ${prefix}/etc
target = x86_64-pc-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = pc
top_build_prefix = ../
top_builddir = ..
top_srcdir = /home/felix/Desktop/NativeSetup/swift-linuxSetup/native_install/swift-corelibs-libdispatch
use_gold_linker = true
AUTOMAKE_OPTIONS = subdir-objects
noinst_LTLIBRARIES = libbsdtests.la
libbsdtests_la_SOURCES = \
	bsdtests.c				\
	bsdtests.h				\
	dispatch_test.c				\
	dispatch_test.h				\
	linux_port.h

noinst_SCRIPTS = leaks-wrapper.sh

# Tests that have not been ported to Linux
# because they test unsupported functionality.
UNPORTED_TESTS = \
	dispatch_deadname			\
	dispatch_proc				\
	dispatch_vm					\
	dispatch_vnode


# Tests that usually pass, but occasionally fail
# and are therefore not suitable for general CI usage.
UNRELIABLE_TESTS = \
	dispatch_priority			\
	dispatch_priority2			\
	dispatch_concur				\
	dispatch_read				\
	dispatch_read2				\
	dispatch_suspend_timer		\
	dispatch_pingpong			\
	dispatch_drift				\
	dispatch_readsync			\
	dispatch_cascade			\
	dispatch_io

ADDITIONAL_TESTS = 
#ADDITIONAL_TESTS = $(UNRELIABLE_TESTS)
dispatch_c99_CFLAGS = $(DISPATCH_TESTS_CFLAGS) $(CBLOCKS_FLAGS) -std=c99
dispatch_plusplus_SOURCES = dispatch_plusplus.cpp
dispatch_priority2_SOURCES = dispatch_priority.c
dispatch_priority2_CPPFLAGS = $(AM_CPPFLAGS) -DUSE_SET_TARGET_QUEUE=1
AM_CPPFLAGS = -I$(top_builddir) -I$(top_srcdir)
DISPATCH_TESTS_CFLAGS = -Wall -Wno-deprecated-declarations $(MARCH_FLAGS)
AM_CFLAGS = $(DISPATCH_TESTS_CFLAGS) $(CBLOCKS_FLAGS) \
	$(BSD_OVERLAY_CFLAGS) $(am__append_4) $(am__append_6)
AM_OBJCFLAGS = $(DISPATCH_TESTS_CFLAGS) $(CBLOCKS_FLAGS)
AM_CXXFLAGS = $(DISPATCH_TESTS_CFLAGS) $(CXXBLOCKS_FLAGS) $(BSD_OVERLAY_CFLAGS)
AM_OBJCXXFLAGS = $(DISPATCH_TESTS_CFLAGS) $(CXXBLOCKS_FLAGS)
#PTHREAD_WORKQUEUE_LIBS = -lpthread_workqueue
SWIFT_LIBS = -L$(SWIFT_LIBDIR) -lswiftCore -lswiftSwiftOnoneSupport
AM_LDFLAGS = -rpath $(SWIFT_LIBDIR)
LDADD = libbsdtests.la $(top_builddir)/src/libdispatch.la $(PTHREAD_WORKQUEUE_LIBS) $(BSD_OVERLAY_LIBS) $(SWIFT_LIBS)
libbsdtests_la_LDFLAGS = -avoid-version
bsdtestsummarize_LDADD = -lm $(BSD_OVERLAY_LIBS)
dispatch_timer_short_LDADD = -lm $(LDADD)
dispatch_group_LDADD = -lm $(LDADD)
AM_TESTS_ENVIRONMENT = NOLEAKS=1
#AM_TESTS_ENVIRONMENT = 
LOG_COMPILER = ./bsdtestharness
DISTCLEAN = Foundation/bench.cc
#dispatch_cf_main_LDFLAGS = -framework CoreFoundation
#dispatch_transform_LDFLAGS = -framework CoreFoundation -framework Security
#dispatch_sync_on_main_LDFLAGS = -framework CoreFoundation
#cffd_LDFLAGS = -framework CoreFoundation
#dispatch_sync_gc_SOURCES = Foundation/dispatch_sync_gc.m
#dispatch_sync_gc_LDFLAGS = -framework Foundation
#dispatch_apply_gc_SOURCES = Foundation/dispatch_apply_gc.m
#dispatch_apply_gc_LDFLAGS = -framework Foundation
#nsoperation_SOURCES = Foundation/nsoperation.m
#nsoperation_LDFLAGS = -framework Foundation
#bench_SOURCES = Foundation/bench.mm func.c
#bench_LDFLAGS = -framework Foundation
all: all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .lo .log .m .mm .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign --ignore-deps tests/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign --ignore-deps tests/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libbsdtests.la: $(libbsdtests_la_OBJECTS) $(libbsdtests_la_DEPENDENCIES) $(EXTRA_libbsdtests_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libbsdtests_la_LINK)  $(libbsdtests_la_OBJECTS) $(libbsdtests_la_LIBADD) $(LIBS)

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
Foundation/$(am__dirstamp):
	@$(MKDIR_P) Foundation
	@: > Foundation/$(am__dirstamp)
Foundation/bench.$(OBJEXT): Foundation/$(am__dirstamp)

bench$(EXEEXT): $(bench_OBJECTS) $(bench_DEPENDENCIES) $(EXTRA_bench_DEPENDENCIES) 
	@rm -f bench$(EXEEXT)
	$(AM_V_OBJCXXLD)$(bench_LINK) $(bench_OBJECTS) $(bench_LDADD) $(LIBS)

bsdtestharness$(EXEEXT): $(bsdtestharness_OBJECTS) $(bsdtestharness_DEPENDENCIES) $(EXTRA_bsdtestharness_DEPENDENCIES) 
	@rm -f bsdtestharness$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(bsdtestharness_OBJECTS) $(bsdtestharness_LDADD) $(LIBS)

bsdtestsummarize$(EXEEXT): $(bsdtestsummarize_OBJECTS) $(bsdtestsummarize_DEPENDENCIES) $(EXTRA_bsdtestsummarize_DEPENDENCIES) 
	@rm -f bsdtestsummarize$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(bsdtestsummarize_OBJECTS) $(bsdtestsummarize_LDADD) $(LIBS)

cffd$(EXEEXT): $(cffd_OBJECTS) $(cffd_DEPENDENCIES) $(EXTRA_cffd_DEPENDENCIES) 
	@rm -f cffd$(EXEEXT)
	$(AM_V_CCLD)$(cffd_LINK) $(cffd_OBJECTS) $(cffd_LDADD) $(LIBS)

dispatch_after$(EXEEXT): $(dispatch_after_OBJECTS) $(dispatch_after_DEPENDENCIES) $(EXTRA_dispatch_after_DEPENDENCIES) 
	@rm -f dispatch_after$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dispatch_after_OBJECTS) $(dispatch_after_LDADD) $(LIBS)

dispatch_api$(EXEEXT): $(dispatch_api_OBJECTS) $(dispatch_api_DEPENDENCIES) $(EXTRA_dispatch_api_DEPENDENCIES) 
	@rm -f dispatch_api$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dispatch_api_OBJECTS) $(dispatch_api_LDADD) $(LIBS)

dispatch_apply$(EXEEXT): $(dispatch_apply_OBJECTS) $(dispatch_apply_DEPENDENCIES) $(EXTRA_dispatch_apply_DEPENDENCIES) 
	@rm -f dispatch_apply$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dispatch_apply_OBJECTS) $(dispatch_apply_LDADD) $(LIBS)
Foundation/dispatch_apply_gc.$(OBJEXT): Foundation/$(am__dirstamp)

dispatch_apply_gc$(EXEEXT): $(dispatch_apply_gc_OBJECTS) $(dispatch_apply_gc_DEPENDENCIES) $(EXTRA_dispatch_apply_gc_DEPENDENCIES) 
	@rm -f dispatch_apply_gc$(EXEEXT)
	$(AM_V_OBJCLD)$(dispatch_apply_gc_LINK) $(dispatch_apply_gc_OBJECTS) $(dispatch_apply_gc_LDADD) $(LIBS)

dispatch_c99$(EXEEXT): $(dispatch_c99_OBJECTS) $(dispatch_c99_DEPENDENCIES) $(EXTRA_dispatch_c99_DEPENDENCIES) 
	@rm -f dispatch_c99$(EXEEXT)
	$(AM_V_CCLD)$(dispatch_c99_LINK) $(dispatch_c99_OBJECTS) $(dispatch_c99_LDADD) $(LIBS)

dispatch_cascade$(EXEEXT): $(dispatch_cascade_OBJECTS) $(dispatch_cascade_DEPENDENCIES) $(EXTRA_dispatch_cascade_DEPENDENCIES) 
	@rm -f dispatch_cascade$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dispatch_cascade_OBJECTS) $(dispatch_cascade_LDADD) $(LIBS)

dispatch_cf_main$(EXEEXT): $(dispatch_cf_main_OBJECTS) $(dispatch_cf_main_DEPENDENCIES) $(EXTRA_dispatch_cf_main_DEPENDENCIES) 
	@rm -f dispatch_cf_main$(EXEEXT)
	$(AM_V_CCLD)$(dispatch_cf_main_LINK) $(dispatch_cf_main_OBJECTS) $(dispatch_cf_main_LDADD) $(LIBS)

dispatch_concur$(EXEEXT): $(dispatch_concur_OBJECTS) $(dispatch_concur_DEPENDENCIES) $(EXTRA_dispatch_concur_DEPENDENCIES) 
	@rm -f dispatch_concur$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dispatch_concur_OBJECTS) $(dispatch_concur_LDADD) $(LIBS)

dispatch_context_for_key$(EXEEXT): $(dispatch_context_for_key_OBJECTS) $(dispatch_context_for_key_DEPENDENCIES) $(EXTRA_dispatch_context_for_key_DEPENDENCIES) 
	@rm -f dispatch_context_for_key$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dispatch_context_for_key_OBJECTS) $(dispatch_context_for_key_LDADD) $(LIBS)

dispatch_data$(EXEEXT): $(dispatch_data_OBJECTS) $(dispatch_data_DEPENDENCIES) $(EXTRA_dispatch_data_DEPENDENCIES) 
	@rm -f dispatch_data$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dispatch_data_OBJECTS) $(dispatch_data_LDADD) $(LIBS)

dispatch_debug$(EXEEXT): $(dispatch_debug_OBJECTS) $(dispatch_debug_DEPENDENCIES) $(EXTRA_dispatch_debug_DEPENDENCIES) 
	@rm -f dispatch_debug$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dispatch_debug_OBJECTS) $(dispatch_debug_LDADD) $(LIBS)

dispatch_drift$(EXEEXT): $(dispatch_drift_OBJECTS) $(dispatch_drift_DEPENDENCIES) $(EXTRA_dispatch_drift_DEPENDENCIES) 
	@rm -f dispatch_drift$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dispatch_drift_OBJECTS) $(dispatch_drift_LDADD) $(LIBS)

dispatch_group$(EXEEXT): $(dispatch_group_OBJECTS) $(dispatch_group_DEPENDENCIES) $(EXTRA_dispatch_group_DEPENDENCIES) 
	@rm -f dispatch_group$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dispatch_group_OBJECTS) $(dispatch_group_LDADD) $(LIBS)

dispatch_io$(EXEEXT): $(dispatch_io_OBJECTS) $(dispatch_io_DEPENDENCIES) $(EXTRA_dispatch_io_DEPENDENCIES) 
	@rm -f dispatch_io$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dispatch_io_OBJECTS) $(dispatch_io_LDADD) $(LIBS)

dispatch_io_net$(EXEEXT): $(dispatch_io_net_OBJECTS) $(dispatch_io_net_DEPENDENCIES) $(EXTRA_dispatch_io_net_DEPENDENCIES) 
	@rm -f dispatch_io_net$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dispatch_io_net_OBJECTS) $(dispatch_io_net_LDADD) $(LIBS)

dispatch_overcommit$(EXEEXT): $(dispatch_overcommit_OBJECTS) $(dispatch_overcommit_DEPENDENCIES) $(EXTRA_dispatch_overcommit_DEPENDENCIES) 
	@rm -f dispatch_overcommit$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dispatch_overcommit_OBJECTS) $(dispatch_overcommit_LDADD) $(LIBS)

dispatch_pingpong$(EXEEXT): $(dispatch_pingpong_OBJECTS) $(dispatch_pingpong_DEPENDENCIES) $(EXTRA_dispatch_pingpong_DEPENDENCIES) 
	@rm -f dispatch_pingpong$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dispatch_pingpong_OBJECTS) $(dispatch_pingpong_LDADD) $(LIBS)

dispatch_plusplus$(EXEEXT): $(dispatch_plusplus_OBJECTS) $(dispatch_plusplus_DEPENDENCIES) $(EXTRA_dispatch_plusplus_DEPENDENCIES) 
	@rm -f dispatch_plusplus$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dispatch_plusplus_OBJECTS) $(dispatch_plusplus_LDADD) $(LIBS)

dispatch_priority$(EXEEXT): $(dispatch_priority_OBJECTS) $(dispatch_priority_DEPENDENCIES) $(EXTRA_dispatch_priority_DEPENDENCIES) 
	@rm -f dispatch_priority$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dispatch_priority_OBJECTS) $(dispatch_priority_LDADD) $(LIBS)

dispatch_priority2$(EXEEXT): $(dispatch_priority2_OBJECTS) $(dispatch_priority2_DEPENDENCIES) $(EXTRA_dispatch_priority2_DEPENDENCIES) 
	@rm -f dispatch_priority2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dispatch_priority2_OBJECTS) $(dispatch_priority2_LDADD) $(LIBS)

dispatch_queue_finalizer$(EXEEXT): $(dispatch_queue_finalizer_OBJECTS) $(dispatch_queue_finalizer_DEPENDENCIES) $(EXTRA_dispatch_queue_finalizer_DEPENDENCIES) 
	@rm -f dispatch_queue_finalizer$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dispatch_queue_finalizer_OBJECTS) $(dispatch_queue_finalizer_LDADD) $(LIBS)

dispatch_read$(EXEEXT): $(dispatch_read_OBJECTS) $(dispatch_read_DEPENDENCIES) $(EXTRA_dispatch_read_DEPENDENCIES) 
	@rm -f dispatch_read$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dispatch_read_OBJECTS) $(dispatch_read_LDADD) $(LIBS)

dispatch_read2$(EXEEXT): $(dispatch_read2_OBJECTS) $(dispatch_read2_DEPENDENCIES) $(EXTRA_dispatch_read2_DEPENDENCIES) 
	@rm -f dispatch_read2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dispatch_read2_OBJECTS) $(dispatch_read2_LDADD) $(LIBS)

dispatch_readsync$(EXEEXT): $(dispatch_readsync_OBJECTS) $(dispatch_readsync_DEPENDENCIES) $(EXTRA_dispatch_readsync_DEPENDENCIES) 
	@rm -f dispatch_readsync$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dispatch_readsync_OBJECTS) $(dispatch_readsync_LDADD) $(LIBS)

dispatch_select$(EXEEXT): $(dispatch_select_OBJECTS) $(dispatch_select_DEPENDENCIES) $(EXTRA_dispatch_select_DEPENDENCIES) 
	@rm -f dispatch_select$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dispatch_select_OBJECTS) $(dispatch_select_LDADD) $(LIBS)

dispatch_sema$(EXEEXT): $(dispatch_sema_OBJECTS) $(dispatch_sema_DEPENDENCIES) $(EXTRA_dispatch_sema_DEPENDENCIES) 
	@rm -f dispatch_sema$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dispatch_sema_OBJECTS) $(dispatch_sema_LDADD) $(LIBS)

dispatch_starfish$(EXEEXT): $(dispatch_starfish_OBJECTS) $(dispatch_starfish_DEPENDENCIES) $(EXTRA_dispatch_starfish_DEPENDENCIES) 
	@rm -f dispatch_starfish$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dispatch_starfish_OBJECTS) $(dispatch_starfish_LDADD) $(LIBS)

dispatch_suspend_timer$(EXEEXT): $(dispatch_suspend_timer_OBJECTS) $(dispatch_suspend_timer_DEPENDENCIES) $(EXTRA_dispatch_suspend_timer_DEPENDENCIES) 
	@rm -f dispatch_suspend_timer$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dispatch_suspend_timer_OBJECTS) $(dispatch_suspend_timer_LDADD) $(LIBS)
Foundation/dispatch_sync_gc.$(OBJEXT): Foundation/$(am__dirstamp)

dispatch_sync_gc$(EXEEXT): $(dispatch_sync_gc_OBJECTS) $(dispatch_sync_gc_DEPENDENCIES) $(EXTRA_dispatch_sync_gc_DEPENDENCIES) 
	@rm -f dispatch_sync_gc$(EXEEXT)
	$(AM_V_OBJCLD)$(dispatch_sync_gc_LINK) $(dispatch_sync_gc_OBJECTS) $(dispatch_sync_gc_LDADD) $(LIBS)

dispatch_sync_on_main$(EXEEXT): $(dispatch_sync_on_main_OBJECTS) $(dispatch_sync_on_main_DEPENDENCIES) $(EXTRA_dispatch_sync_on_main_DEPENDENCIES) 
	@rm -f dispatch_sync_on_main$(EXEEXT)
	$(AM_V_CCLD)$(dispatch_sync_on_main_LINK) $(dispatch_sync_on_main_OBJECTS) $(dispatch_sync_on_main_LDADD) $(LIBS)

dispatch_timer$(EXEEXT): $(dispatch_timer_OBJECTS) $(dispatch_timer_DEPENDENCIES) $(EXTRA_dispatch_timer_DEPENDENCIES) 
	@rm -f dispatch_timer$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dispatch_timer_OBJECTS) $(dispatch_timer_LDADD) $(LIBS)

dispatch_timer_bit31$(EXEEXT): $(dispatch_timer_bit31_OBJECTS) $(dispatch_timer_bit31_DEPENDENCIES) $(EXTRA_dispatch_timer_bit31_DEPENDENCIES) 
	@rm -f dispatch_timer_bit31$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dispatch_timer_bit31_OBJECTS) $(dispatch_timer_bit31_LDADD) $(LIBS)

dispatch_timer_bit63$(EXEEXT): $(dispatch_timer_bit63_OBJECTS) $(dispatch_timer_bit63_DEPENDENCIES) $(EXTRA_dispatch_timer_bit63_DEPENDENCIES) 
	@rm -f dispatch_timer_bit63$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dispatch_timer_bit63_OBJECTS) $(dispatch_timer_bit63_LDADD) $(LIBS)

dispatch_timer_set_time$(EXEEXT): $(dispatch_timer_set_time_OBJECTS) $(dispatch_timer_set_time_DEPENDENCIES) $(EXTRA_dispatch_timer_set_time_DEPENDENCIES) 
	@rm -f dispatch_timer_set_time$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dispatch_timer_set_time_OBJECTS) $(dispatch_timer_set_time_LDADD) $(LIBS)

dispatch_timer_short$(EXEEXT): $(dispatch_timer_short_OBJECTS) $(dispatch_timer_short_DEPENDENCIES) $(EXTRA_dispatch_timer_short_DEPENDENCIES) 
	@rm -f dispatch_timer_short$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dispatch_timer_short_OBJECTS) $(dispatch_timer_short_LDADD) $(LIBS)

dispatch_timer_timeout$(EXEEXT): $(dispatch_timer_timeout_OBJECTS) $(dispatch_timer_timeout_DEPENDENCIES) $(EXTRA_dispatch_timer_timeout_DEPENDENCIES) 
	@rm -f dispatch_timer_timeout$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dispatch_timer_timeout_OBJECTS) $(dispatch_timer_timeout_LDADD) $(LIBS)

dispatch_transform$(EXEEXT): $(dispatch_transform_OBJECTS) $(dispatch_transform_DEPENDENCIES) $(EXTRA_dispatch_transform_DEPENDENCIES) 
	@rm -f dispatch_transform$(EXEEXT)
	$(AM_V_CCLD)$(dispatch_transform_LINK) $(dispatch_transform_OBJECTS) $(dispatch_transform_LDADD) $(LIBS)
Foundation/nsoperation.$(OBJEXT): Foundation/$(am__dirstamp)

nsoperation$(EXEEXT): $(nsoperation_OBJECTS) $(nsoperation_DEPENDENCIES) $(EXTRA_nsoperation_DEPENDENCIES) 
	@rm -f nsoperation$(EXEEXT)
	$(AM_V_OBJCLD)$(nsoperation_LINK) $(nsoperation_OBJECTS) $(nsoperation_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f Foundation/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

.c.o:
	$(AM_V_CC)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -c -o $@ $<

dispatch_c99-dispatch_c99.o: dispatch_c99.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dispatch_c99_CFLAGS) $(CFLAGS) -c -o dispatch_c99-dispatch_c99.o `test -f 'dispatch_c99.c' || echo '$(srcdir)/'`dispatch_c99.c

dispatch_c99-dispatch_c99.obj: dispatch_c99.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dispatch_c99_CFLAGS) $(CFLAGS) -c -o dispatch_c99-dispatch_c99.obj `if test -f 'dispatch_c99.c'; then $(CYGPATH_W) 'dispatch_c99.c'; else $(CYGPATH_W) '$(srcdir)/dispatch_c99.c'; fi`

dispatch_priority2-dispatch_priority.o: dispatch_priority.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dispatch_priority2_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dispatch_priority2-dispatch_priority.o `test -f 'dispatch_priority.c' || echo '$(srcdir)/'`dispatch_priority.c

dispatch_priority2-dispatch_priority.obj: dispatch_priority.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dispatch_priority2_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dispatch_priority2-dispatch_priority.obj `if test -f 'dispatch_priority.c'; then $(CYGPATH_W) 'dispatch_priority.c'; else $(CYGPATH_W) '$(srcdir)/dispatch_priority.c'; fi`

.cpp.o:
	$(AM_V_CXX)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)$(LTCXXCOMPILE) -c -o $@ $<

.m.o:
	$(AM_V_OBJC)$(OBJCCOMPILE) -c -o $@ $<

.m.obj:
	$(AM_V_OBJC)$(OBJCCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.m.lo:
	$(AM_V_OBJC)$(LTOBJCCOMPILE) -c -o $@ $<

.mm.o:
	$(AM_V_OBJCXX)$(OBJCXXCOMPILE) -c -o $@ $<

.mm.obj:
	$(AM_V_OBJCXX)$(OBJCXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.mm.lo:
	$(AM_V_OBJCXX)$(LTOBJCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
dispatch_apply.log: dispatch_apply$(EXEEXT)
	@p='dispatch_apply$(EXEEXT)'; \
	b='dispatch_apply'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
dispatch_api.log: dispatch_api$(EXEEXT)
	@p='dispatch_api$(EXEEXT)'; \
	b='dispatch_api'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
dispatch_c99.log: dispatch_c99$(EXEEXT)
	@p='dispatch_c99$(EXEEXT)'; \
	b='dispatch_c99'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
dispatch_debug.log: dispatch_debug$(EXEEXT)
	@p='dispatch_debug$(EXEEXT)'; \
	b='dispatch_debug'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
dispatch_queue_finalizer.log: dispatch_queue_finalizer$(EXEEXT)
	@p='dispatch_queue_finalizer$(EXEEXT)'; \
	b='dispatch_queue_finalizer'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
dispatch_group.log: dispatch_group$(EXEEXT)
	@p='dispatch_group$(EXEEXT)'; \
	b='dispatch_group'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
dispatch_overcommit.log: dispatch_overcommit$(EXEEXT)
	@p='dispatch_overcommit$(EXEEXT)'; \
	b='dispatch_overcommit'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
dispatch_plusplus.log: dispatch_plusplus$(EXEEXT)
	@p='dispatch_plusplus$(EXEEXT)'; \
	b='dispatch_plusplus'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
dispatch_context_for_key.log: dispatch_context_for_key$(EXEEXT)
	@p='dispatch_context_for_key$(EXEEXT)'; \
	b='dispatch_context_for_key'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
dispatch_after.log: dispatch_after$(EXEEXT)
	@p='dispatch_after$(EXEEXT)'; \
	b='dispatch_after'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
dispatch_timer.log: dispatch_timer$(EXEEXT)
	@p='dispatch_timer$(EXEEXT)'; \
	b='dispatch_timer'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
dispatch_timer_short.log: dispatch_timer_short$(EXEEXT)
	@p='dispatch_timer_short$(EXEEXT)'; \
	b='dispatch_timer_short'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
dispatch_timer_timeout.log: dispatch_timer_timeout$(EXEEXT)
	@p='dispatch_timer_timeout$(EXEEXT)'; \
	b='dispatch_timer_timeout'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
dispatch_sema.log: dispatch_sema$(EXEEXT)
	@p='dispatch_sema$(EXEEXT)'; \
	b='dispatch_sema'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
dispatch_timer_bit31.log: dispatch_timer_bit31$(EXEEXT)
	@p='dispatch_timer_bit31$(EXEEXT)'; \
	b='dispatch_timer_bit31'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
dispatch_timer_bit63.log: dispatch_timer_bit63$(EXEEXT)
	@p='dispatch_timer_bit63$(EXEEXT)'; \
	b='dispatch_timer_bit63'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
dispatch_timer_set_time.log: dispatch_timer_set_time$(EXEEXT)
	@p='dispatch_timer_set_time$(EXEEXT)'; \
	b='dispatch_timer_set_time'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
dispatch_starfish.log: dispatch_starfish$(EXEEXT)
	@p='dispatch_starfish$(EXEEXT)'; \
	b='dispatch_starfish'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
dispatch_data.log: dispatch_data$(EXEEXT)
	@p='dispatch_data$(EXEEXT)'; \
	b='dispatch_data'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
dispatch_io_net.log: dispatch_io_net$(EXEEXT)
	@p='dispatch_io_net$(EXEEXT)'; \
	b='dispatch_io_net'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
dispatch_select.log: dispatch_select$(EXEEXT)
	@p='dispatch_select$(EXEEXT)'; \
	b='dispatch_select'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
dispatch_priority.log: dispatch_priority$(EXEEXT)
	@p='dispatch_priority$(EXEEXT)'; \
	b='dispatch_priority'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
dispatch_priority2.log: dispatch_priority2$(EXEEXT)
	@p='dispatch_priority2$(EXEEXT)'; \
	b='dispatch_priority2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
dispatch_concur.log: dispatch_concur$(EXEEXT)
	@p='dispatch_concur$(EXEEXT)'; \
	b='dispatch_concur'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
dispatch_read.log: dispatch_read$(EXEEXT)
	@p='dispatch_read$(EXEEXT)'; \
	b='dispatch_read'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
dispatch_read2.log: dispatch_read2$(EXEEXT)
	@p='dispatch_read2$(EXEEXT)'; \
	b='dispatch_read2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
dispatch_suspend_timer.log: dispatch_suspend_timer$(EXEEXT)
	@p='dispatch_suspend_timer$(EXEEXT)'; \
	b='dispatch_suspend_timer'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
dispatch_pingpong.log: dispatch_pingpong$(EXEEXT)
	@p='dispatch_pingpong$(EXEEXT)'; \
	b='dispatch_pingpong'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
dispatch_drift.log: dispatch_drift$(EXEEXT)
	@p='dispatch_drift$(EXEEXT)'; \
	b='dispatch_drift'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
dispatch_readsync.log: dispatch_readsync$(EXEEXT)
	@p='dispatch_readsync$(EXEEXT)'; \
	b='dispatch_readsync'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
dispatch_cascade.log: dispatch_cascade$(EXEEXT)
	@p='dispatch_cascade$(EXEEXT)'; \
	b='dispatch_cascade'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
dispatch_io.log: dispatch_io$(EXEEXT)
	@p='dispatch_io$(EXEEXT)'; \
	b='dispatch_io'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
dispatch_cf_main.log: dispatch_cf_main$(EXEEXT)
	@p='dispatch_cf_main$(EXEEXT)'; \
	b='dispatch_cf_main'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
dispatch_transform.log: dispatch_transform$(EXEEXT)
	@p='dispatch_transform$(EXEEXT)'; \
	b='dispatch_transform'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
dispatch_sync_on_main.log: dispatch_sync_on_main$(EXEEXT)
	@p='dispatch_sync_on_main$(EXEEXT)'; \
	b='dispatch_sync_on_main'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
cffd.log: cffd$(EXEEXT)
	@p='cffd$(EXEEXT)'; \
	b='cffd'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
dispatch_sync_gc.log: dispatch_sync_gc$(EXEEXT)
	@p='dispatch_sync_gc$(EXEEXT)'; \
	b='dispatch_sync_gc'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
dispatch_apply_gc.log: dispatch_apply_gc$(EXEEXT)
	@p='dispatch_apply_gc$(EXEEXT)'; \
	b='dispatch_apply_gc'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
nsoperation.log: nsoperation$(EXEEXT)
	@p='nsoperation$(EXEEXT)'; \
	b='nsoperation'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
bench.log: bench$(EXEEXT)
	@p='bench$(EXEEXT)'; \
	b='bench'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
#.test$(EXEEXT).log:
#	@p='$<'; \
#	$(am__set_b); \
#	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
#	--log-file $$b.log --trs-file $$b.trs \
#	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
#	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(LTLIBRARIES) $(SCRIPTS)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f Foundation/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	clean-noinstLTLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool \
	clean-noinstLTLIBRARIES cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am recheck tags tags-am uninstall \
	uninstall-am

.PRECIOUS: Makefile


# For use by swift/utils/build-script to force test cases to be
# built during the build phase of CI
build-tests: $(TESTS) $(check_PROGRAMS)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
