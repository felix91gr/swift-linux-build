# -*- Python -*-

import os

## Autogenerated by llbuild configuration.
# Do not edit!
config.llbuild_src_root = "/home/felix/Desktop/NativeSetup/swift-linuxSetup/native_install/llbuild"
config.llbuild_obj_root = "/home/felix/Desktop/NativeSetup/swift-linuxSetup/native_install/build/2pass/llbuild-linux-x86_64"

config.llbuild_tools_dir = "/home/felix/Desktop/NativeSetup/swift-linuxSetup/native_install/build/2pass/llbuild-linux-x86_64/./bin"
config.llbuild_lib_dir = "/home/felix/Desktop/NativeSetup/swift-linuxSetup/native_install/build/2pass/llbuild-linux-x86_64/./lib"

# Tools found by the build system.
config.filecheck_path = "/home/felix/Desktop/NativeSetup/swift-linuxSetup/native_install/build/2pass/llvm-linux-x86_64/bin/FileCheck"
config.swiftc_path = ""
config.swiftc_found = "FALSE"
config.osx_sysroot = ""

# Support substitution of the tools_dir with user parameters. This is
# used when we can't determine the tool dir at configuration time.
try:
    config.llbuild_tools_dir = config.llbuild_tools_dir % lit_config.params
except KeyError:
    e = sys.exc_info()[1]
    key, = e.args
    lit_config.fatal("unable to find %r parameter, use '--param=%s=VALUE'" % (
        key, key))

# Let the main config do the real work.
if config.test_exec_root is None:
  config.test_exec_root = os.path.dirname(os.path.realpath(__file__))
lit_config.load_config(config, "/home/felix/Desktop/NativeSetup/swift-linuxSetup/native_install/llbuild/tests/lit.cfg")
